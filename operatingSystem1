### ch01. 운영체제의 개요 

## 운영체제(OS,Operating System)
- 일반 노트북, 스마트폰의 전원을 켜면 가장 먼저 만나게 되는 소프트웨어 
   ex. PC운영체제(윈도우, MAC, OS, 유닉스, 리눅스 등)

<br>

## 임베디드 운영체제
- CPU의 성능이 낮고 메모리의 크기도 작은 시스템에 내장하도록 만든 운영체제
     임베디드 운영체제가 있는 제품은 기능을 추가할 수 있음(ex. 음질향상, MP3파일 뿐만 아니라 다른 오디오 파일도 가능)
- 임베디드 운영체제가 있는 기계는 기능을 계속 향상할 수 있음

- 과거에는 이렇게 하지 못했음 

<br>

## 운영체제의 필요성 
- 컴퓨터는 운영체제가 없어도 작동은 하지만, 기능에 제약이 따름 ( 운영체제 없이 사용자가 직접하게 되면 문제가 발생할 수 있음)
- 운영체제가 있는 기계는 다양한 응용프로그램을 설치하여, 사용할 수 있고 성능 향상을 위한 새로운 기능을 쉽게 추가
- 운영체제는 컴퓨터의 성능을 향상할 뿐 아니라 자원을 관리하고 사용자에게 편리한 인터페이스 환경을 제공
- 사용자가 직접 자원에 접근하는 것을 막음으로써 컴퓨터 자원을 보호 
- 운영체제가 제공하는 사용자 인터페이스와 하드웨어 인터페이스를 이용하여 자원에 접근

<br>

## 운영체제의 역할 
- 자원관리: 자원을 요청한 프로그램이 여러 개라면 적당한 순서로 자원을 배분하고 적절한 시점에 자원을 회수하여 다른 응용 프로그램에 나누어줌
- 자원보호: 비정상적인 작업으로부터 컴퓨터 자원을 보호
- 하드웨어 인터페이스 제공
- 사용자 인터페이스 제공 

<br>

## 운영체제의 목표 

자원관리 -> 효율성
자원보호 -> 안전성
하드웨어 인터페이스 제공 -> 확장성
사용자 인터페이스 제공 -> 편리성 


<br>


## 다중 프로그래밍
- 하나의 CPU로 여러 작업을 동시에 실행하는 기술
- 한번에 하나의 작업만 가능한 일괄작업 시스템에 비해 효율성이 뛰어남

<br>

## 시분할 시스템 
- CPU 사용 시간을 잘게 쪼개어 작업들에 나누어 줌으로써 모든 작업이 동시에 처리되는 것처럼 보임
- 현재는 대부분의 시분할 시스템이 사용됨 

<br>

## 커널
- 프로세스 관리, 메모리 관리, 저장장치 관리와 같은 운영체제의 핵심적 기능을 모아 놓은 것 


<br>

## 인터페이스
- 커널에 사용자의 명령을 전달하고 실행결과를 알려주는 역할 

<br>

## 시스템 호출
- 커널이 자신을 보호하기 위해 만든 인터페이스 
- 커널은 사용자나 응용프로그램으로부터 컴퓨터 자원을 보호하기 위해 자원에 직접 접근 하는 것을 차단 

<br>

## 커널 
커널이 하는일은 프로세스 관리, 메모리 관리, 파일 시스템관리, 입출력 관리, 프로세스 간 통신 관리

<br>

